apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ${app}-${type}-pvc
  labels:
    app: ${app}-${type}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: ${sc}
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${app}-${type}
  labels:
    app: ${app}-${type}
spec:
  selector:
    matchLabels:
      app: ${app}-${type}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ${app}-${type}
    spec:
      volumes:
        - name: postgres-data 
          persistentVolumeClaim:
            claimName: ${app}-${type}-pvc
        - name: pgadmin-data
          emptyDir: {} 
        - name: pgadmin-data-logs
          emptyDir: {}
      containers:
        - name: pgadmin
          image: docker.io/dpage/pgadmin4
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              value: root@localhost.com
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${app}-${type}-pass 
                  key: password
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          volumeMounts:
            - name: pgadmin-data
              mountPath: /var/lib/pgadmin
            - name: pgadmin-data-logs
              mountPath: /var/log/pgadmin
          resources: {}
          readinessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          livenessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
        - resources:
            limits:
              memory: 512Mi
          readinessProbe:
            exec:
              command:
                - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: postgresql
          livenessProbe:
            exec:
              command:
                - /usr/libexec/check-container
                - '--live'
            initialDelaySeconds: 120
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: POSTGRESQL_USER
              value: root 
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${app}-${type}-pass
                  key: password
            - name: POSTGRESQL_DATABASE
              value: default
          securityContext:
            capabilities: {}
            privileged: false
          ports:
            - containerPort: 5432
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/pgsql/data
          terminationMessagePolicy: File
          image: >-
            image-registry.openshift-image-registry.svc:5000/openshift/postgresql:10-el8
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler

